# This workflow will upload a Python Package using uv when a release or a tag is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Build & Publish Python Package

on:
  push:
    branches: [main]
    tags: ["v*"]
  release:
    types: [published]
  workflow_dispatch:

permissions:
  contents: read

env:
  PYTHON_VERSION: "3.10"

jobs:
  build:
    name: Build & Verify Package
    runs-on: ubuntu-latest
    permissions:
      attestations: write
      id-token: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          cache-dependency-glob: "**/pyproject.toml"

      - name: Install dependencies
        run: uv sync --all-extras

      - name: Run linting and type checks
        run: |
          uv run ruff check .
          uv run ruff format --check .
          uv run mypy src/pyauxlib

      - name: Run tests
        run: uv run pytest

      - name: Build package
        run: uv build

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        with:
          name: python-package-distributions
          path: dist/

  release-test-pypi:
    name: Publish to TestPyPI
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs: build
    environment: test-pypi # NOTE Remember to configure the environment in Github (no approval required)

    permissions:
      id-token: write # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  github-release:
    name: >-
      Sign the Python distribution with Sigstore
      and upload them to GitHub Release
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0  # Need full history for commitizen

      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Generate release notes with commitizen
        run: |
          uvx --from commitizen cz changelog --incremental --dry-run > release_notes.md

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release create
          "$GITHUB_REF_NAME"
          --repo "$GITHUB_REPOSITORY"
          --notes-file release_notes.md

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >-
          gh release upload
          "$GITHUB_REF_NAME" dist/**
          --repo "$GITHUB_REPOSITORY"

  release-pypi:
    name: Publish released package to PyPI
    if: startsWith(github.ref, 'refs/tags/v')
    needs: github-release
    runs-on: ubuntu-latest
    environment: pypi # NOTE Remember to configure the environment in Github

    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v5
        with:
          name: python-package-distributions
          path: dist/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
